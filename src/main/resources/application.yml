info:
  app:
    name: '@project.name@'
    version: '@project.version@'
    
server:
  port: 8080
  
scheduling:
  period: ${SCHEDULING_PERIOD:60000}
  
#logging:#  level:#    org: 
#      springframework:
#        security: DEBUG
        
spring:
  datasource:
    name: PropostaDataSource
    driver-class-name: org.postgresql.Driver    
    url: ${PROPOSAL_DATASOURCE_URL:jdbc:postgresql://localhost:5433/proposta-db}
    password: ${PROPOSAL_DATASOURCE_PASSWORD:password}
    username: ${PROPOSAL_DATASOURCE_USERNAME:postgres}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: propostaPool
      connection-test-query: select now()
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 10000
  jpa:
    defer-datasource-initialization: true
    open-in-view: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: true
    # Keycloak
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposal}
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposal/protocol/openid-connect/certs}  
             
# Feign
app:
  solicitation:
    url: ${APP_SOLICITATION:http://localhost:9999}
    path: /api/solicitacao
  accounts:
    url: ${APP_ACCOUNTS:http://localhost:8888}
    path: /api/cartoes

# actuator
management:  endpoint:    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'


